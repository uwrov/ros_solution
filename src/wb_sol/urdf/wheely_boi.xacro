<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="wheely_boi">
<!-- Constants -->
  <xacro:property name="wheel_separation" value="0.070" />
  <xacro:property name="wheel_radius" value="0.034" />
  <xacro:property name="wheel_width" value="0.010" />
  <xacro:property name="body_height" value="0.1" />
  <xacro:property name="body_width" value="0.050" />
  <xacro:property name="body_length" value="0.035" />
  <xacro:property name="camera_link" value="0.01" />

<!-- Materials -->

  <gazebo reference="edumip_body">
    <material>Gazebo/White</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>

  <gazebo reference="wheelR">
    <material>Gazebo/Red</material>
    <mu1>0.84</mu1>
    <mu2>0.84</mu2>
  </gazebo>

  <gazebo reference="wheelL">
    <material>Gazebo/Blue</material>
    <mu1>0.84</mu1>
    <mu2>0.84</mu2>
  </gazebo>
  
  <gazebo reference="camera_link">
    <material>Gazebo/Green</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>
  
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>wheely_boi/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link_optical</frameName>
        <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
            between the gazebo sensor image and the frame it is supposed to
            be attached to -->
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>

<!-- Physical properties -->
  <link name="edumip_body">
    <visual>
      <geometry>
        <box size="${body_length} ${body_width} ${body_height}"/>
      </geometry>
    </visual>

    <collision>
      <geometry>
        <box size="${body_length} ${body_width} ${body_height}"/>
      </geometry> 
    </collision>

    <inertial>
      <mass value="0.18"/>
      <inertia ixx="6.0e-4" ixy="0" ixz="0" iyy="6.0e-4" iyz="0" izz="6.0e-4"/>
    </inertial>
  </link>
  
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
      <material name="green"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  
<!-- Macro definition of a wheel -->
  <xacro:macro name="wheel_link" params="name radius width mass">
    <link name="${name}">
      <visual>
        <geometry>
          <cylinder length="${width}" radius="${radius}"/>
        </geometry>
      </visual>

      <collision>
        <geometry>
          <cylinder length="${width}" radius="${radius}"/>
        </geometry>
      </collision>

      <inertial>
        <mass value="${mass}"/>
        <inertia ixx="1.75e-5" ixy="0.0" ixz="0.0" iyy="1.75e-5" iyz="0.0" izz="1.75e-5"/>
      </inertial>
    </link>
  </xacro:macro>

<!-- Macro usage -->
  <xacro:wheel_link name="wheelL" radius="${wheel_radius}" width="${wheel_width}" mass="0.03"/>
  <xacro:wheel_link name="wheelR" radius="${wheel_radius}" width="${wheel_width}" mass="0.03"/>
  
<!-- Joints -->
  <joint name="jointL" type="continuous">
    <parent link="edumip_body"/>
    <child link="wheelL"/>
    <axis xyz="0 0 1"/>
    <origin xyz="0 ${body_width/2 + wheel_width/2} -${body_height/2 - 0.01}" rpy="${pi/2} 0 0" /> 
    <dynamics friction="0.1"/>
  </joint>

  <joint name="jointR" type="continuous">
    <parent link="edumip_body"/>
    <child link="wheelR"/>
    <axis xyz="0 0 1"/>
    <origin xyz="0 -${body_width/2 + wheel_width/2} -${body_height/2 - 0.01}" rpy="${pi/2} 0 0" />
    <dynamics friction="0.1"/>
  </joint>
  
  <joint name="camera_joint" type="fixed">
    <parent link="edumip_body"/>
    <child link="camera_link"/>
    <axis xyz="0 1 0" />
    <origin xyz="${body_width/2} 0 ${camera_link}" rpy="0 0 0"/>
  </joint>

<!-- Plugin Declaration -->
  <gazebo>
    <plugin name="wb_plugin" filename="libwb_plugin.so"> </plugin>
  </gazebo>

</robot>
